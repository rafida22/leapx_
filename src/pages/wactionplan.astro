---
import '../styles/global.css'
import Wheader from "../components/Wheader.astro";
---
 <!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://cdn.tailwindcss.com"></script>

  <!-- Font Awesome 6 Free (solid icons) -->
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
    integrity="sha512-a/NIWgdSTtr6WrxO…=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
  />
</head>
 <body data-startup-id="wizard-flair" class=" border border-gray-300 px-6 py-4">
 <div class="mt-5 flex items-center justify-between border border-gray-300 rounded-xl px-6 py-4 shadow-sm bg-white">
  <!-- Left side: Back arrow + startup info -->
  <div class="flex items-center gap-4">
    <!-- Back arrow -->
    <button><a href="./leapx" class="text-2xl text-gray-700 hover:text-black">
      &#8592;</a>
    </button>

    <!-- Title + subtitle -->
    <div>
      <h2 class="font-bold text-xl">Wizard Flair</h2>
      <p class="text-sm text-gray-600">AI-Powered Workflow Automation</p>
    </div>
  </div>

  <!-- Right side: Save Changes button -->
  <button id="saveWactionPlan"class="flex items-center gap-2 bg-violet-500 hover:bg-violet-600 text-white text-sm font-medium py-2 px-4 rounded-md shadow">
    <!-- Save icon -->
    <svg class="w-4 h-4" fill="white" viewBox="0 0 24 24">
      <path d="M17 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V7l-4-4zm0 16H5V5h11.17L19 7.83V19zm-5-2a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm-4-8h8v2H8V9z"/>
    </svg>
    Save Changes
  </button>
</div>
<br>
 <p class="text-sm">Dashboard > Wizard Flair > Action plan</p>
 <Wheader/>
 <head>
    <script src="https://cdn.tailwindcss.com"></script>

  <!-- Font Awesome 6 Free (solid icons) -->
    <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
    integrity="sha512-a/NIWgdSTtr6WrxO…=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
    />
    </head>
    
    <!-- ─────────────────────────  ACTION‑PLAN CARD  ───────────────────────── -->
<section class="bg-white border rounded-lg mt-5 shadow-sm p-6 max-w-full mx-auto">
   <div class="flex justify-between items-center mb-4">
    <div>
   <h2 class="text-2xl font-bold mb-1">Action Plan</h2>
   <p class="text-gray-600 mb-6">Track and manage startup milestones and tasks</p>
   </div>
    <button id="addAction"
        class="ml-4 bg-violet-500 hover:bg-violet-600 text-white text-sm
               font-medium px-3 py-1.5 rounded-md shadow">
  + Add Action
</button>
    <input type="file" id="uploadInput" class="hidden" />
  </div>
  <div class="overflow-x-auto">
    <table id="planTable" class="w-full table-auto border-collapse">
      <thead class="bg-gray-100 text-left text-gray-600">
        <tr>
          <th class="px-4 py-2">DATE</th>
          <th class="px-4 py-2">ACTION PLAN ITEM</th>
          <th class="px-4 py-2">STATUS</th>
          <th class="px-4 py-2">RESPONSIBLE PERSON</th>
          <th class="px-4 py-2">REMARKS</th>
          <th class="px-2 py-2 text-center">ACTIONS</th>
        </tr>
      </thead>

      <tbody>

        <!-- SAMPLE ROW 1 -->
       

        <!-- SAMPLE ROW 2 -->
        

      </tbody>
    </table>
  </div>
</section>

<!-- ─────────────── SUMMARY BAR ─────────────── -->
<div id="summary" class="border rounded-lg mt-4 max-w-full mx-auto">
  <dl class="grid grid-cols-4 divide-x divide-gray-200 text-center">
    <div class="p-4"    ><dt class="count text-2xl font-bold" data-type="total">0</dt><dd class="text-sm text-gray-600">Total Items</dd></div>
    <div class="p-4 text-emerald-600"><dt class="count text-2xl font-bold" data-type="Completed">0</dt><dd class="text-sm">Completed</dd></div>
    <div class="p-4 text-red-600"    ><dt class="count text-2xl font-bold" data-type="In Progress">0</dt><dd class="text-sm">In Progress</dd></div>
    <div class="p-4 text-gray-600"   ><dt class="count text-2xl font-bold" data-type="Not Started">0</dt><dd class="text-sm">Not Started</dd></div>
  </dl>
</div>
<!-- ═══════ Add-Action Modal (hidden by default) ═══════ -->
<div id="actionModal" class="fixed inset-0 bg-black/40 hidden flex justify-center items-center z-50">
  <div class="bg-white w-full max-w-md rounded-lg p-6 relative">
    <!-- close (×) -->
    <button id="closeModal" class="absolute top-2 right-3 text-2xl">&times;</button>

    <h2 class="text-lg font-semibold mb-4">Add Action-Plan Item</h2>

    <form id="actionForm" class="space-y-4">
      <div>
        <label class="block text-sm font-medium mb-1">Item</label>
        <input id="itemField" type="text" required
               class="w-full border rounded px-3 py-2">
      </div>

      <div>
        <label class="block text-sm font-medium mb-1">Status</label>
        <select id="statusField" class="w-full border rounded px-3 py-2">
          <option>In Progress</option>
          <option>Completed</option>
          <option>Not Started</option>
        </select>
      </div>

      <div>
        <label class="block text-sm font-medium mb-1">Responsible</label>
        <input id="respField" type="text" class="w-full border rounded px-3 py-2">
      </div>

      <div>
        <label class="block text-sm font-medium mb-1">Remarks</label>
        <input id="remField" type="text" class="w-full border rounded px-3 py-2">
      </div>

      <div class="flex justify-end gap-3 pt-2">
        <button type="button" id="cancelModal"
                class="px-4 py-2 border rounded">Cancel</button>
        <button type="submit"
                class="px-4 py-2 bg-violet-600 hover:bg-violet-700 text-white rounded">
          Add
        </button>
      </div>
    </form>
  </div>
</div>

<!-- Add this DELETE CONFIRM MODAL HTML just before </body> -->
<div id="deleteConfirmModal" class="fixed inset-0 bg-black/40 hidden z-50 flex justify-center items-center">
  <div class="bg-white p-6 rounded-lg shadow-lg text-center max-w-sm w-full">
    <p class="text-lg font-semibold mb-4">Are you sure you want to delete this row?</p>
    <div class="flex justify-center gap-4">
      <button id="confirmDeleteRow" class="px-4 py-2 bg-red-600 text-white rounded">Delete</button>
      <button id="cancelDeleteRow" class="px-4 py-2 border rounded">Cancel</button>
    </div>
  </div>
</div>
<!-- TOAST ALERT -->
<div id="toast" class="fixed bottom-5 right-5 hidden bg-white text-gray-800 px-4 py-2 rounded shadow-lg border border-gray-200 z-50 transition-opacity duration-300"></div>

<!-- ─────────────── SCRIPT ─────────────── -->
<script>
const tableBody = document.querySelector('#planTable tbody');
const modal = document.getElementById('actionModal');
const openBtn = document.getElementById('addAction');
const closeBtns = ['closeModal', 'cancelModal'].map(id => document.getElementById(id));
const form = document.getElementById('actionForm');
const itemField = document.getElementById('itemField');
const statusField = document.getElementById('statusField');
const respField = document.getElementById('respField');
const remField = document.getElementById('remField');

openBtn.addEventListener('click', () => {
  form.reset();
  modal.classList.remove('hidden');
});

closeBtns.forEach(btn => btn.addEventListener('click', () => modal.classList.add('hidden')));

form.addEventListener('submit', e => {
  e.preventDefault();
  const item = itemField.value.trim();
  const resp = respField.value.trim() || '—';
  const status = statusField.value;
  const rem = remField.value.trim();
  const today = new Date().toLocaleDateString('en-US', { year:'numeric', month:'long', day:'2-digit' });
  const tr = buildRow({ date: today, item, status, responsible: resp, remarks: rem });
  tableBody.appendChild(tr);
  refreshSummary();
  modal.classList.add('hidden');
});

function getStartupKey(name) {
  const id = document.body.dataset.startupId || 'default';
  return `${name}_${id}`;
}

function pillHTML(status) {
  const map = {
    'Completed': 'bg-emerald-600 text-white',
    'In Progress': 'bg-yellow-200 text-yellow-900',
    'Not Started': 'bg-red-100 text-red-600'
  };
  return `<span class="status-pill inline-block px-3 py-0.5 rounded-full ${map[status]}">${status}</span>`;
}

function buildRow({ date, item, status, responsible, remarks }) {
  const tr = document.createElement('tr');
  tr.dataset.status = status;
  tr.innerHTML = `
    <td class="px-4 py-4 whitespace-nowrap">${date}</td>
    <td class="px-4 py-4">${item}</td>
    <td class="px-4 py-4">
      ${pillHTML(status)}
      <select class="status-select hidden border p-1 rounded">
        <option${status==='Completed'?' selected':''}>Completed</option>
        <option${status==='In Progress'?' selected':''}>In Progress</option>
        <option${status==='Not Started'?' selected':''}>Not Started</option>
      </select>
    </td>
    <td class="px-4 py-4">
      <span class="resp-text">${responsible}</span>
      <input class="resp-input hidden border p-1 rounded w-32" />
    </td>
    <td class="px-4 py-4">
      <span class="remark-text">${remarks}</span>
      <input class="remark-input hidden border p-1 rounded w-40" />
    </td>
    <td class="px-2 py-4 text-center space-x-3">
      <button class="edit-btn text-violet-600 hover:text-violet-800"><i class="fas fa-pen"></i></button>
      <button class="save-btn text-green-600 hover:text-green-800 hidden"><i class="fas fa-check"></i></button>
      <button class="delete-btn text-red-600 hover:text-red-800"><i class="fas fa-trash-alt"></i></button>
    </td>`;
  return tr;
}

function refreshSummary() {
  const counts = { 'Completed': 0, 'In Progress': 0, 'Not Started': 0 };
  tableBody.querySelectorAll('tr').forEach(tr => {
    const st = tr.dataset.status;
    if (counts[st] !== undefined) counts[st]++;
  });
  document.querySelector('[data-type="total"]').textContent = tableBody.querySelectorAll('tr').length;
  document.querySelector('[data-type="Completed"]').textContent = counts['Completed'];
  document.querySelector('[data-type="In Progress"]').textContent = counts['In Progress'];
  document.querySelector('[data-type="Not Started"]').textContent = counts['Not Started'];
}

let rowToDelete = null;
document.querySelector('#planTable').addEventListener('click', function(e) {
  const tr = e.target.closest('tr');
  if (!tr) return;

  if (e.target.closest('.edit-btn')) {
    tr.querySelector('.edit-btn').classList.add('hidden');
    tr.querySelector('.save-btn').classList.remove('hidden');
    tr.querySelector('.status-pill').classList.add('hidden');
    tr.querySelector('.status-select').classList.remove('hidden');
    const respInput = tr.querySelector('.resp-input');
    respInput.value = tr.querySelector('.resp-text').textContent.trim();
    tr.querySelector('.resp-text').classList.add('hidden');
    respInput.classList.remove('hidden');
    const remInput = tr.querySelector('.remark-input');
    remInput.value = tr.querySelector('.remark-text').textContent.trim();
    tr.querySelector('.remark-text').classList.add('hidden');
    remInput.classList.remove('hidden');
  }

  if (e.target.closest('.save-btn')) {
    const newStatus = tr.querySelector('.status-select').value;
    tr.dataset.status = newStatus;
    tr.querySelector('.status-pill').outerHTML = pillHTML(newStatus);
    tr.querySelector('.status-select').classList.add('hidden');
    const newResp = tr.querySelector('.resp-input').value.trim() || '—';
    tr.querySelector('.resp-text').textContent = newResp;
    tr.querySelector('.resp-text').classList.remove('hidden');
    tr.querySelector('.resp-input').classList.add('hidden');
    const newRem = tr.querySelector('.remark-input').value.trim();
    tr.querySelector('.remark-text').textContent = newRem;
    tr.querySelector('.remark-text').classList.remove('hidden');
    tr.querySelector('.remark-input').classList.add('hidden');
    tr.querySelector('.save-btn').classList.add('hidden');
    tr.querySelector('.edit-btn').classList.remove('hidden');
    refreshSummary();
  }

  if (e.target.closest('.delete-btn')) {
    rowToDelete = tr;
    document.getElementById('deleteConfirmModal').classList.remove('hidden');
  }
});

document.getElementById('confirmDeleteRow').addEventListener('click', () => {
  if (rowToDelete) {
    rowToDelete.remove();
    rowToDelete = null;
    refreshSummary();
  }
  document.getElementById('deleteConfirmModal').classList.add('hidden');
});

document.getElementById('cancelDeleteRow').addEventListener('click', () => {
  rowToDelete = null;
  document.getElementById('deleteConfirmModal').classList.add('hidden');
});

function showToast(message) {
  const toast = document.getElementById('toast');
  toast.textContent = message;
  toast.classList.remove('hidden');
  toast.style.opacity = '1';
  setTimeout(() => toast.style.opacity = '0', 2000);
  setTimeout(() => toast.classList.add('hidden'), 2500);
}
document.getElementById('saveWactionPlan')?.addEventListener('click', () => {
  const rows = Array.from(document.querySelectorAll('#planTable tbody tr')).map(tr => {
    const date = tr.children[0]?.textContent.trim() || '';
    const item = tr.children[1]?.textContent.trim() || '';
    const status = tr.dataset.status || '';
    const responsible = tr.querySelector('.resp-text')?.textContent.trim() || tr.querySelector('.resp-input')?.value.trim() || '';
    const remarks = tr.querySelector('.remark-text')?.textContent.trim() || tr.querySelector('.remark-input')?.value.trim() || '';

    return { date, item, status, responsible, remarks };
  });

  localStorage.setItem(getStartupKey('actionPlanData'), JSON.stringify(rows));
  showToast('Action plan saved locally!');
});


window.addEventListener('DOMContentLoaded', () => {
 const savedRows = JSON.parse(localStorage.getItem(getStartupKey('actionPlanData')) || '[]');

  savedRows.forEach(data => {
    const tr = buildRow(data);
    tableBody.appendChild(tr);
  });
  refreshSummary();
});

</script>


</body>
</html>