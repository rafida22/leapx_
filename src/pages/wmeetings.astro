---
import '../styles/global.css'
import Wheader from "../components/Wheader.astro";
---
 <!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://cdn.tailwindcss.com"></script>

  <!-- Font Awesome 6 Free (solid icons) -->
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
    integrity="sha512-a/NIWgdSTtr6WrxO…=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
  />
</head>
 <body data-startup-id="wizard-flair" class=" border border-gray-300 px-6 py-4">
 <div class="mt-5 flex items-center justify-between border border-gray-300 rounded-xl px-6 py-4 shadow-sm bg-white">
  <!-- Left side: Back arrow + startup info -->
  <div class="flex items-center gap-4">
    <!-- Back arrow -->
    <button><a href="./leapx" class="text-2xl text-gray-700 hover:text-black">
      &#8592;</a>
    </button>

    <!-- Title + subtitle -->
    <div>
      <h2 class="font-bold text-xl">Wizard Flair</h2>
      <p class="text-sm text-gray-600">AI-Powered Workflow Automation</p>
    </div>
  </div>

  <!-- Right side: Save Changes button -->
  <button id="saveWmeetings"class="flex items-center gap-2 bg-violet-500 hover:bg-violet-600 text-white text-sm font-medium py-2 px-4 rounded-md shadow">
    <!-- Save icon -->
    <svg class="w-4 h-4" fill="white" viewBox="0 0 24 24">
      <path d="M17 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V7l-4-4zm0 16H5V5h11.17L19 7.83V19zm-5-2a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm-4-8h8v2H8V9z"/>
    </svg>
    Save Changes
  </button>
</div>
<br>
 <p class="text-sm">Dashboard > Wizard Flair > Action plan</p>
 <Wheader/>
 <!-- scheduled‑meetings -->
  <div class="bg-white shadow-md mt-5 border border-gray-300 rounded-lg p-6 max-w-full mx-auto">
    <div class="flex justify-between items-center mb-4">
      <h2 class="text-xl font-semibold text-gray-800">Scheduled Meetings</h2>
      <div class="flex gap-2">
        <button id="addMeet" class="bg-violet-500 hover:bg-violet-600 text-white text-sm font-medium px-3 py-1.5 rounded-md shadow">+ Add Meeting</button>
        <input id="searchBox" type="text" placeholder="Search Meetings" class="border border-gray-300 rounded-md px-3 py-1 text-sm focus:outline-none" />
        <select id="statusFilter" class="border border-gray-300 rounded-md px-2 py-1 text-sm">
          <option value="All">All Status</option>
          <option value="Done">Done</option>
          <option value="Scheduled">Scheduled</option>
        </select>
      </div>
    </div>

    <div class="overflow-x-auto">
      <table class="min-w-full text-left">
        <thead class="text-sm text-gray-600 border-t border-b bg-gray-50">
          <tr>
            <th class="py-2 px-4">DATE AND TIME</th>
            <th class="py-2 px-4">PROGRAM / TOPIC</th>
            <th class="py-2 px-4">STATUS</th>
            <th class="py-2 px-4">REMARKS</th>
            <th class="py-2 px-4 text-center">ACTIONS</th>
          </tr>
        </thead>
        <tbody id="meetBody" class="text-gray-800"></tbody>
      </table>
    </div>
  </div>

  <!-- Meeting Modal -->
  <div id="meetingModal" class="fixed inset-0 bg-black/40 hidden flex items-center justify-center z-50">
    <div class="bg-white w-full max-w-md rounded-lg p-6 relative">
      <button id="closeMeetingModal" class="absolute top-2 right-3 text-2xl">&times;</button>
      <h2 class="text-xl font-semibold mb-4">Add New Meeting</h2>
      <form id="meetingForm" class="space-y-4">
        <div>
          <label  for="meetingTopic" class="block text-sm font-medium text-gray-700">Meeting Topic</label>
          <input type="text" id="meetingTopic" required class="w-full border px-3 py-2 rounded" />
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700">Date</label>
          <input type="date" id="meetingDate" required class="w-full border px-3 py-2 rounded" />
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700">Time</label>
          <input type="time" id="meetingTime" required class="w-full border px-3 py-2 rounded" />
        </div>
        <div>
          <label class="block text-sm font-medium mb-1">Status</label>
          <select id="statusField" class="w-full border rounded px-3 py-2">
            <option>Scheduled</option>
            <option>Done</option>
          </select>
        </div>
        <div class="text-right">
          <button type="submit" class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded">
            Add Meeting
          </button>
        </div>
      </form>
    </div>
  </div>

  <!-- Toast -->
  <div id="toast" class="fixed bottom-6 right-6 bg-white text-gray-800 shadow-lg border border-gray-300 px-4 py-3 rounded-lg hidden z-50 transition-all duration-300">
     Changes saved successfully!
  </div>

  <!-- JS -->
  <script>
    const tbody = document.getElementById('meetBody');
    const meetingModal = document.getElementById('meetingModal');
    const openModal = document.getElementById('addMeet');
    const closeMeetingModal = document.getElementById('closeMeetingModal');
    const meetingForm = document.getElementById('meetingForm');
    const statusField = document.getElementById('statusField');

    const pillClass = s => ({
      Done: 'bg-yellow-200 text-yellow-900',
      Scheduled: 'bg-emerald-600 text-white'
    }[s] || 'bg-gray-100 text-gray-800');

    const showToast = () => {
      const toast = document.getElementById('toast');
      toast.classList.remove('hidden');
      setTimeout(() => toast.classList.add('hidden'), 2500);
    };

    openModal.addEventListener('click', () => {
      meetingModal.classList.remove('hidden');
    });

    closeMeetingModal.addEventListener('click', () => {
      meetingModal.classList.add('hidden');
      meetingForm.reset();
    });
    function getStartupKey(name) {
  const id = document.body.dataset.startupId || 'default';
  return `${name}_${id}`;
}

    meetingForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const topic = document.getElementById('meetingTopic').value.trim();
      const date = document.getElementById('meetingDate').value;
      const time = document.getElementById('meetingTime').value;
      const status = statusField.value;

      const formattedDateTime = new Date(`${date}T${time}`).toLocaleString('en-US', {
        year: 'numeric', month: 'long', day: '2-digit', hour: '2-digit', minute: '2-digit'
      });

      const tr = document.createElement('tr');
      tr.dataset.status = status;
      tr.innerHTML = `
        <td class="py-2 px-4 whitespace-nowrap">${formattedDateTime}</td>
        <td class="py-2 px-4 topic">${topic}</td>
        <td class="px-4 py-4 status">
          <span class="status-pill inline-block px-3 py-0.5 rounded-full ${pillClass(status)}">${status}</span>
          <select class="status-select hidden border p-1 rounded">
            <option${status === 'Scheduled' ? ' selected' : ''}>Scheduled</option>
            <option${status === 'Done' ? ' selected' : ''}>Done</option>
          </select>
        </td>
        <td class="py-2 px-4 remarks"></td>
        <td class="py-2 px-4 text-center text-lg space-x-3">
          <button class="edit text-yellow-600"><i class="fas fa-pen"></i></button>
          <button class="save text-green-600 hidden"><i class="fas fa-check"></i></button>
          <button class="del  text-red-600"><i class="fas fa-trash-alt"></i></button>
        </td>`;

      tbody.appendChild(tr);
      meetingModal.classList.add('hidden');
      meetingForm.reset();
    });

    tbody.addEventListener('click', (e) => {
      const tr = e.target.closest('tr');
      if (!tr) return;

      if (e.target.closest('.del')) {
        const confirmBox = document.createElement('div');
        confirmBox.className = 'fixed inset-0 z-50 flex items-center justify-center bg-black/50';
        confirmBox.innerHTML = `
          <div class="bg-white p-6 rounded shadow max-w-sm text-center">
            <p class="mb-4 font-medium text-lg">Are you sure you want to delete this meeting?</p>
            <div class="flex justify-center gap-4">
              <button id="cancelDel" class="px-4 py-2 border rounded">Cancel</button>
              <button id="confirmDel" class="px-4 py-2 bg-red-600 text-white rounded">Delete</button>
            </div>
          </div>`;
        document.body.appendChild(confirmBox);
        document.getElementById('cancelDel').onclick = () => confirmBox.remove();
        document.getElementById('confirmDel').onclick = () => {
          tr.remove();
          confirmBox.remove();
        };
        return;
      }

      if (e.target.closest('.edit')) {
        tr.querySelector('.edit').classList.add('hidden');
        tr.querySelector('.save').classList.remove('hidden');
        tr.children[0].innerHTML = `<input class="border px-2 py-1 rounded w-full" value="${tr.children[0].textContent.trim()}">`;
        tr.querySelector('.topic').innerHTML = `<input class="border px-2 py-1 rounded w-full" value="${tr.querySelector('.topic').textContent.trim()}">`;
        tr.querySelector('.status').innerHTML = `
          <select class="border px-2 py-1 rounded">
            <option${tr.dataset.status === 'Done' ? ' selected' : ''}>Done</option>
            <option${tr.dataset.status === 'Scheduled' ? ' selected' : ''}>Scheduled</option>
          </select>`;
        tr.querySelector('.remarks').innerHTML = `<input class="border px-2 py-1 rounded w-full" value="${tr.querySelector('.remarks').textContent.trim()}">`;
        return;
      }

      if (e.target.closest('.save')) {
        tr.querySelector('.save').classList.add('hidden');
        tr.querySelector('.edit').classList.remove('hidden');

        const newDate = tr.children[0].querySelector('input').value.trim();
        const newTopic = tr.querySelector('.topic input').value.trim();
        const newSt = tr.querySelector('.status select').value;
        const newRem = tr.querySelector('.remarks input').value.trim();

        tr.children[0].textContent = newDate || '—';
        tr.querySelector('.topic').textContent = newTopic || '—';
        tr.dataset.status = newSt;
        tr.querySelector('.status').innerHTML = `<span class="status-pill inline-block px-3 py-0.5 rounded-full ${pillClass(newSt)}">${newSt}</span><select class="status-select hidden border p-1 rounded"><option${newSt === 'Scheduled' ? ' selected' : ''}>Scheduled</option><option${newSt === 'Done' ? ' selected' : ''}>Done</option></select>`;
        tr.querySelector('.remarks').textContent = newRem;
      }
    });

    document.getElementById('saveWmeetings').addEventListener('click', () => {
      const meetings = [...tbody.rows].map(row => ({
        date: row.cells[0].innerText.trim(),
        topic: row.cells[1].innerText.trim(),
        status: row.dataset.status,
        remarks: row.cells[3].innerText.trim()
      }));
      localStorage.setItem(getStartupKey('Meetings'), JSON.stringify(meetings));
      showToast();
    });

    window.addEventListener('DOMContentLoaded', () => {
      const savedMeetings = JSON.parse(localStorage.getItem(getStartupKey('Meetings')) || '[]');
      savedMeetings.forEach(meet => {
        const tr = document.createElement('tr');
        tr.dataset.status = meet.status;
        tr.innerHTML = `
          <td class="py-2 px-4 whitespace-nowrap">${meet.date}</td>
          <td class="py-2 px-4 topic">${meet.topic}</td>
          <td class="px-4 py-4 status">
            <span class="status-pill inline-block px-3 py-0.5 rounded-full ${pillClass(meet.status)}">${meet.status}</span>
            <select class="status-select hidden border p-1 rounded">
              <option${meet.status === 'Scheduled' ? ' selected' : ''}>Scheduled</option>
              <option${meet.status === 'Done' ? ' selected' : ''}>Done</option>
            </select>
          </td>
          <td class="py-2 px-4 remarks">${meet.remarks}</td>
          <td class="py-2 px-4 text-center text-lg space-x-3">
            <button class="edit text-yellow-600"><i class="fas fa-pen"></i></button>
            <button class="save text-green-600 hidden"><i class="fas fa-check"></i></button>
            <button class="del text-red-600"><i class="fas fa-trash-alt"></i></button>
          </td>`;
        tbody.appendChild(tr);
      });
    });
     const searchBox = document.getElementById('searchBox');
    const statusFilter = document.getElementById('statusFilter');
    const meetBody = document.getElementById('meetBody');

    function filterRows() {
      const search = searchBox.value.toLowerCase();
      const status = statusFilter.value;

      [...meetBody.rows].forEach(row => {
        const topic = row.querySelector('.topic').innerText.toLowerCase();
        const rowStatus = row.dataset.status;
        const matchesSearch = topic.includes(search);
        const matchesStatus = status === 'All' || rowStatus === status;
        row.style.display = matchesSearch && matchesStatus ? '' : 'none';
      });
    }

    searchBox.addEventListener('input', filterRows);
    statusFilter.addEventListener('change', filterRows);
  </script>
</body>
</html>
